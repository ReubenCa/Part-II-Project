let rec collatz = fun n ->
let rec gen = fun k ->
  if (==) n 1 then 1 else
  if (mod) n 2 == 0 then 
      (+) 1 (collatz ((/) n 2))
  else
      (+) 1 (collatz ((+) (( * ) n 3) 1))
in 

  if (==) k 0 then [] else
    (collatz k) :: (gen ((-) k 1))
in
  gen 10